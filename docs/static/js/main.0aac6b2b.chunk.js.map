{"version":3,"sources":["index.js"],"names":["Square","props","className","isColor","onClick","value","Board","i","this","arr","length","includes","squares","x","y","content","push","renderRow","num","renderSquare","renderContent","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","positionArr","win","slice","calculateWinner","setState","concat","step","map","item","index","position","text","text1","v","alert","flag","lines","a","b","c","current","winner","status","moves","move","desc","jumpTo","handleClick","jumpToNext","jumpToBegin","rederContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aac6b2b.chunk.js","sourcesContent":["/*\n * @Description: 文件说明\n * @Author: wangbin\n * @Date: 2020-11-11 15:12:57\n * @LastEditTime: 2020-11-11 21:01:34\n * @LastEditors: wangbin\n * @FilePath: \\my-app\\src\\index.js\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className={props.isColor ? 'moveClick square' : 'square'} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    let isColor = false\n    if (this.props.arr && this.props.arr.length === 3) {\n      isColor = this.props.arr.includes(i) ? true : false\n    }\n    return (\n      <Square\n        key={i}\n        isColor={isColor}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  // 渲染行数\n  renderContent(x, y) {\n    let content = []\n    for (let i = 0; i < x; i++) {\n      content.push(\n        <div className=\"board-row\" key={i}>{this.renderRow(i, y)}</div>\n      )\n    }\n    return content\n  }\n  // 渲染行内容\n  renderRow(x, y) {\n    let content = []\n    for (let i = 0; i < y; i++) {\n      let num = x * 3 + i\n      content.push(\n        this.renderSquare(num)\n      )\n    }\n    return content\n  }\n  render() {\n    return (\n      <div>\n        {this.renderContent(3, 3)}\n        {/* <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div> */}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n      positionArr: [],\n      win: false,\n      arr: []\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const positionArr = this.state.positionArr.slice(0, this.state.stepNumber)\n    positionArr.push(i)\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      positionArr: positionArr,\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n\n    });\n\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n  rederContent() {\n    const positionArr = this.state.positionArr\n    if (positionArr.length === 0) {\n      return ''\n    }\n    else {\n      const arr = [[1, 1], [1, 2], [1, 3],\n      [2, 1], [2, 2], [2, 3],\n      [3, 1], [3, 2], [3, 3]]\n\n      const content = positionArr.map((item, index) => {\n        if (index >= this.state.stepNumber) {\n          return\n        }\n        let position = arr[item]\n        const text = `第${index + 1}步:   ${index % 2 === 0 ? 'X' : 'O'}`\n        const text1 = `落子第${position[0]}行，第${position[1]}列`\n        return (\n          <div key={index}>\n            <span className='content-span'>{text}</span>\n            <span>{text1}</span>\n          </div>\n        );\n      });\n      return content\n    }\n  }\n\n  jumpToNext(v) {\n    let num = this.state.stepNumber\n    if (v) {\n      if (num === this.state.history.length - 1) {\n        alert('当前是最后一步')\n      } else {\n        this.setState({\n          stepNumber: num + 1,\n          xIsNext: ((num + 1) % 2) === 0\n        })\n      }\n    } else {\n      if (num === 0) {\n        alert('当前是第一步')\n      } else {\n        this.setState({\n          stepNumber: num - 1,\n          xIsNext: ((num - 1) % 2) === 0\n        })\n      }\n    }\n  }\n  jumpToBegin() {\n    this.setState({\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n      positionArr: [],\n      win: false,\n      arr: []\n    }\n    )\n  }\n\n  calculateWinner(squares, flag = false) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        if (flag) {\n          return [a, b, c]\n        } else { return squares[a]; }\n\n      }\n    }\n    return null;\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.calculateWinner(current.squares);\n    let arr = []\n    if (winner) {\n      arr = this.calculateWinner(current.squares, true);\n    }\n\n    const moves = history.map((step, move) => {\n      if (!move) {\n        return\n      }\n      const desc = move ?\n        '返回第' + move + '步' :\n        '返回一开始';\n      return (\n        <li key={move} className={move === this.state.stepNumber ? 'moveClick' : ''}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else if (this.state.stepNumber === 9) {\n      status = '游戏结束！双方平局！'\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n\n    return (\n      <div>\n\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <h2 className=\"title\">{status}</h2>\n            <Board\n              arr={arr}\n              squares={current.squares}\n              onClick={i => this.handleClick(i)}\n            />\n            <div><button onClick={() => this.jumpToNext()} className='game-board-button'>上一步</button>\n              <button onClick={() => this.jumpToNext(true)} className='game-board-button'>下一步</button>\n              <button onClick={() => this.jumpToBegin()} className='game-board-button'>重新开始</button></div>\n          </div>\n          <div className=\"game-info\">\n            <ol>{moves}</ol>\n\n          </div>\n          <div className={this.state.stepNumber === 0 ? 'game-step hidding' : 'game-step'}><span>落子详情:</span>\n            {this.rederContent()}</div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}